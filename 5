def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,def func1(arg1, arg2):
    var58 = var5(arg2, arg1)
    def func11(arg59, arg60):
        var61 = 827268967 | ((((arg60 & var58) ^ (var58 + arg59) & -378336575) + arg1 & arg1) + arg1) - (-201 + arg1 + arg2 & (arg60 & (arg59 + (arg2 - arg2 & 702816342)) + (arg2 & arg2 ^ -502))) + arg1
        var62 = arg2 - -1351086313
        var63 = arg59 + (arg1 - arg60)
        var64 = ((-932 - arg1 - arg59) ^ 471 - 1464359652) ^ (arg2 | var62) + (((1900379385 & (var63 ^ (arg1 | (var61 ^ var61) - arg2 | ((312745660 - ((376477770 & 1700714742) & arg59)) & arg59) | var63 | var62))) - arg60) ^ -610)
        result = arg2 - var61 - 853817987 ^ var64
        return result
    var65 = func11(arg1, arg2)
    var66 = (var58 | 553 & var58) ^ -589
    var67 = ((arg1 + arg2) | var58) + 277226209
    var68 = arg1 + -184 ^ arg1 ^ arg2
    var69 = arg2 + arg2 - (var65 - var68)
    var70 = arg2 & (var65 | var69 ^ var68)
    var71 = (var66 | var69 | arg2) | arg2
    var72 = var66 + (var70 & (691804367 | var65))
    var73 = arg1 | (arg2 & var65 & arg1)
    if var68 < var69:
        var74 = arg1 | (var65 | (var66 ^ arg1))
    else:
        var74 = arg1 & var68 | var65 ^ var73
    var75 = var58 + var71 + -781 + arg1
    var76 = ((var75 - var68) + 537546294) & var71
    var77 = (var69 - var76 + var73) + var58
    var78 = var70 ^ var75 | 651 | var76
    var79 = var73 ^ ((var78 - var68) + arg1)
    var80 = 2134001719 ^ ((var72 ^ var65) + -746)
    var81 = var79 ^ arg2 - var80 | var77
    if var80 < var76:
        var82 = (-698 - (var58 - var76)) + var79
    else:
        var82 = var72 + var72
    var83 = var68 & 262613025 ^ (arg1 | var71)
    result = var83 | (var68 + 994038862)
    return result
def func4(arg6, arg7):
    var10 = class5()
    for var11 in range(1):
        var10.func6(var11, arg7)
    var35 = func7(arg7, arg6)
    var52 = var38(arg6, var35)
    var53 = var52 ^ (((arg7 | arg6 - var52) & 1331389916 - var35 + var52) - arg6) & arg7
    var54 = var35 ^ arg6
    var55 = var54 | ((var35 - arg6) | arg6 + var54)
    var56 = var35 - (var53 | var35 - (var35 | (arg6 | var52)) & arg7)
    var57 = var55 & arg7
    result = arg7 ^ var57
    return result
def func10(arg39, arg40):
    var41 = ((arg39 | arg40) + 1387799404) | 96
    var42 = 460 & 7
    var43 = -273348804 + var42 - var42 - var42
    var44 = arg39 | arg39
    var45 = arg40 | arg40 - arg39 - var43
    var46 = arg40 + 1348316117 ^ arg39 + var43
    var47 = var43 | var44
    var48 = var41 ^ var46 ^ var41 + var44
    var49 = (var45 & var42) & (arg39 ^ var45)
    if var45 < var48:
        var50 = -741 ^ (var43 - arg39)
    else:
        var50 = var47 & var43 + var45 & var49
    var51 = (636 ^ var46 - arg39) + var48
    result = var43 + (arg40 - var49)
    return result
def func9():
    closure = [9]
    def func8(arg36, arg37):
        closure[0] += func10(arg36, arg37)
        return closure[0]
    func = func8
    return func
var38 = func9()
def func7(arg12, arg13):
    var14 = arg12 | arg13 & 1407005728 | arg12
    var15 = var14 | -278653844 + 11137584
    var16 = (145805898 + arg12) | var14 ^ var15
    var17 = var15 - arg13
    var18 = (-648 - var14) + var15
    var19 = -1932756015 & arg12
    var20 = var14 & var18 & (-974199218 | 81432516)
    var21 = (var19 & arg12) | var18 & 1410085708
    var22 = (var21 & var15 + arg13) + var21
    var23 = (var22 | arg12 + -294) & var18
    var24 = var23 & var21 - var15
    var25 = var18 + var17
    var26 = arg12 + var21 | var18 ^ var23
    var27 = (var24 + var22) - var17 & var25
    var28 = var24 + 364 | var26 ^ arg13
    var29 = var14 | (var21 | 865 + var15)
    var30 = (var23 ^ var16) + arg13 | var28
    if var24 < var26:
        var31 = (var22 | var14) | var19 + var20
    else:
        var31 = var18 | var26 - (var21 + var29)
    if var18 < var14:
        var32 = (-221 - var18 ^ var16) | var20
    else:
        var32 = arg12 - arg13
    var33 = var23 | var21 + var15
    var34 = var20 & var30 - var20 - var18
    result = var21 ^ var33
    return result
class class5(object):
    def func6(self, arg8, arg9):
        result = 0 - 1
        return result
def func3():
    closure = [-10]
    def func2(arg3, arg4):
        closure[0] += func4(arg3, arg4)
        return closure[0]
    func = func2
    return func
var5 = func3()
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 84'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
